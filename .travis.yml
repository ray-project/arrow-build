# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: generic

# don't build twice
if: tag IS blank

matrix:
  include:
    - os: osx
      osx_image: xcode8.3
      env: MB_PYTHON_VERSION=2.7
    - os: osx
      osx_image: xcode8.3
      env: MB_PYTHON_VERSION=3.5
    - os: osx
      osx_image: xcode8.3
      env: MB_PYTHON_VERSION=3.6
    - os: osx
      osx_image: xcode8.3
      env: MB_PYTHON_VERSION=3.7

    - os: linux
      dist: trusty
      services:
        - docker
      if: tag IS blank
      env:
        global:
          - PLAT=x86_64
          - TRAVIS_TAG=linux
      before_install: []
      before_script:
        - docker pull rayproject/arrow_linux_x86_64_base:ARROW-4873
      script:
        - git clone https://github.com/pcmoritz/arrow
        - git -C arrow checkout 7988a85d5d0ba20fdcc654e8decb7ad1eb9dabfd
        - mkdir -p dist
        - pushd arrow/python/manylinux1
        - docker run --shm-size=2g -e UBUNTU_WHEELS=1 -e SETUPTOOLS_SCM_PRETEND_VERSION=0.12.0.RAY -e PYTHON_VERSION="2.7" -e UNICODE_WIDTH=32 -e WHEEL_VERSION=0.31.1 -v $PWD:/io -v $PWD/../../:/arrow rayproject/arrow_linux_x86_64_base:ARROW-4873 /io/build_arrow.sh
        - docker run --shm-size=2g -e UBUNTU_WHEELS=1 -e SETUPTOOLS_SCM_PRETEND_VERSION=0.12.0.RAY -e PYTHON_VERSION="2.7" -e UNICODE_WIDTH=16 -e WHEEL_VERSION=0.31.1 -v $PWD:/io -v $PWD/../../:/arrow rayproject/arrow_linux_x86_64_base:ARROW-4873 /io/build_arrow.sh
        - docker run --shm-size=2g -e UBUNTU_WHEELS=1 -e SETUPTOOLS_SCM_PRETEND_VERSION=0.12.0.RAY -e PYTHON_VERSION="3.5" -e UNICODE_WIDTH=16 -e WHEEL_VERSION=0.31.1 -v $PWD:/io -v $PWD/../../:/arrow rayproject/arrow_linux_x86_64_base:ARROW-4873 /io/build_arrow.sh
        - docker run --shm-size=2g -e UBUNTU_WHEELS=1 -e SETUPTOOLS_SCM_PRETEND_VERSION=0.12.0.RAY -e PYTHON_VERSION="3.6" -e UNICODE_WIDTH=16 -e WHEEL_VERSION=0.31.1 -v $PWD:/io -v $PWD/../../:/arrow rayproject/arrow_linux_x86_64_base:ARROW-4873 /io/build_arrow.sh
        - docker run --shm-size=2g -e UBUNTU_WHEELS=1 -e SETUPTOOLS_SCM_PRETEND_VERSION=0.12.0.RAY -e PYTHON_VERSION="3.7" -e UNICODE_WIDTH=16 -e WHEEL_VERSION=0.31.1 -v $PWD:/io -v $PWD/../../:/arrow rayproject/arrow_linux_x86_64_base:ARROW-4873 /io/build_arrow.sh
        - popd
        - sudo mv arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp27-cp27m-linux_x86_64.whl arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp27-cp27m-manylinux1_x86_64.whl || true
        - sudo mv arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp27-cp27mu-linux_x86_64.whl arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp27-cp27mu-manylinux1_x86_64.whl || true
        - sudo mv arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp35-cp35m-linux_x86_64.whl arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp35-cp35m-manylinux1_x86_64.whl || true
        - sudo mv arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp36-cp36m-linux_x86_64.whl arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp36-cp36m-manylinux1_x86_64.whl || true
        - sudo mv arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp37-cp37m-linux_x86_64.whl arrow/python/manylinux1/dist/pyarrow-0.12.0.RAY-cp37-cp37m-manylinux1_x86_64.whl || true
        - sudo mv arrow/python/manylinux1/dist/* dist/
        - cat indextemplate | sed s/COMMIT/${TRAVIS_COMMIT}/g > dist/index.html
      install: []

env:
  global:
    - PLAT=x86_64
    - TRAVIS_TAG=build-385-wheel-osx-cp37m
    - MACOSX_DEPLOYMENT_TARGET="10.9"
    - PYARROW_VERSION=0.12.0.RAY
    - PYARROW_BUILD_VERBOSE=1

before_install:
  - git clone https://github.com/matthew-brett/multibuild # TODO pin it
  - git -C multibuild checkout 4e7a9396e9a50731bb83fc0d16bb98fb0c4032d7

  - git clone -b master https://github.com/pcmoritz/arrow arrow
  - git -C arrow checkout 7988a85d5d0ba20fdcc654e8decb7ad1eb9dabfd

  # Also remove artifacts that depend on Boost
  - brew uninstall boost cgal postgis sfcgal
  - brew update
  - brew upgrade cmake
  - brew install bison flex

  - export CONFIG_PATH=`pwd`/arrow/dev/tasks/python-wheels/osx-build.sh
  - source multibuild/common_utils.sh
  - source multibuild/travis_osx_steps.sh

  - before_install

install:
  - mkdir -p dist

  # multibuild's default clean_code function
  - clean_code arrow 7988a85d5d0ba20fdcc654e8decb7ad1eb9dabfd

  # the following functions are defined in osx-build.sh
  - build_wheel arrow
  - install_run arrow

  # move built wheels to a top level directory
  - mv -v arrow/python/dist/* dist/


deploy:
  provider: s3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key:
    secure: $AWS_SECRET_ACCESS_KEY
  bucket: arrow-wheels
  skip_cleanup: true
  region: us-west-2
  local-dir: dist/
  upload-dir: $TRAVIS_COMMIT
  on:
    repo: pcmoritz/arrow-build
notifications:
  email:
  - pcmoritz@gmail.com
